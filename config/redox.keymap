/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&sl { release-after-ms = <500>; };

/ {
    behaviors {
        htnr: htnr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kpnr>, <&kp>;

            label = "hold tap no repeat";
        };

        hrml: hrml {
            compatible = "zmk,behavior-hold-tap";
            label = "home row mod left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <220>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        hrmr: hrmr {
            compatible = "zmk,behavior-hold-tap";
            label = "home row mod right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <220>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        skqr: skqr {
            compatible = "zmk,behavior-sticky-key";
            label = "sticky key quick-release";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <500>;
            quick-release;
            ignore-modifiers;
        };

        htsk: htsk {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold-tap sticky key";
            bindings = <&kp>, <&skqr>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
        };

        sshift_tap: sshift_tap {
            compatible = "zmk,behavior-mod-morph";
            label = "Smart shift tap";
            bindings = <&skqr LSHFT>, <&caps_word>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        smart_shift: smart_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "Smart shift";
            bindings = <&kp>, <&sshift_tap>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
        };

        ltqt: ltqt {
            compatible = "zmk,behavior-hold-tap";
            label = "Layer tap quick tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            quick-tap-ms = <250>;
            tapping-term-ms = <280>;
        };

        htsl: htsl {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold tap sticky layer";
            bindings = <&mo>, <&sl>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    macros {
        kpnr: macro_kpnr {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "kp no repeat";
        };

        clear_state: clear_state {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp F24>;
            label = "CLEAR_STATE";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_home {
            bindings = <&kp HOME>;
            key-positions = <42 43>;
            layers = <0>;
        };

        combo_end {
            bindings = <&kp END>;
            key-positions = <53 52>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp ESC    &kp N1        &kp N2        &kp N3         &kp N4        &kp N5                                                                      &kp N6  &kp N7        &kp N8             &kp N9           &kp N0                 &kp MINUS
&kp TAB    &kp Q         &kp W         &kp E          &kp R         &kp T   &kp DELETE                                    &kp MINUS             &kp Y   &kp U         &kp I              &kp O            &htnr EQUAL SEMICOLON  &kp BSPC
&kp LCTRL  &kp A         &hrml LALT S  &hrml LCTRL D  &hrml LGUI F  &kp G   &kp BACKSPACE                                 &kp EQUAL             &kp H   &hrmr RGUI J  &hrmr RCTRL K      &hrmr LALT L     &kp P                  &htnr DQT SQT
&kp LSHFT  &kp Z         &kp X         &kp C          &kp V         &kp B   &ltqt 6 PG_UP  &kp PG_DN    &kp LEFT_BRACKET  &ltqt 6 RBKT          &kp N   &kp M         &htnr UNDER COMMA  &htnr MINUS DOT  &htnr BSLH SLASH       &mt LSHFT RET
&kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &kp RALT       &htsl 1 1             &ltqt 2 SPACE  &kp RET      &kp ESC           &smart_shift LSHFT 0          &htsl 1 1     &kp LEFT           &kp DOWN         &kp UP                 &kp RIGHT
            >;

            label = "Base";
        };

        symbol_layer {
            bindings = <
&trans     &kp F1    &kp F2            &kp F3             &kp F4            &kp F5                                                           &kp F6          &kp F7     &kp F8      &kp F9     &kp F10    &kp UNDER
&kp GRAVE  &kp EXCL  &kp AT            &kp HASH           &kp DLLR          &kp PRCNT  &kp F11                                 &kp F12       &kp CARET       &kp AMPS   &kp STAR    &kp LBKT   &kp RBKT   &kp DEL
&trans     &kp PLUS  &hrml LALT UNDER  &hrml LCTRL EQUAL  &hrml LGUI MINUS  &kp COLON  &trans                                  &kp PLUS      &kp LEFT_ARROW  &kp DOWN   &kp UP      &kp RIGHT  &kp DQT    &kp BSLH
&trans     &kp PIPE  &kp LT            &kp GT             &kp PRCNT         &kp TILDE  &kp C_PREV  &kp C_NEXT    &kp C_VOL_DN  &kp C_VOL_UP  &kp LBRC        &kp RBRC   &kp LPAR    &kp RPAR   &kp QMARK  &trans
&to 0      &trans    &trans            &trans             &trans                       &trans      &kp C_PP      &clear_state  &trans                        &kp SPACE  &kp INSERT  &kp RALT   &kp PSCRN  &kp K_MUTE
            >;

            label = "Sym";
        };

        numpad_layer {
            label = "Num";
            bindings = <
&kp LS(ESC)  &kp LG(N1)     &kp LG(N2)       &kp LG(N3)        &kp LG(N4)      &kp LG(N5)                                             &trans  &trans  &trans  &trans  &trans  &trans
&kp LS(TAB)  &kp PLUS       &htnr AMPS N7    &htnr ASTRK N8    &htnr LPAR N9   &kp EQUAL        &kp LG(N6)                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans       &htnr RPAR N0  &htnr DOLLAR N4  &htnr PERCENT N5  &htnr CARET N6  &htnr COMMA DOT  &trans                        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans       &kp MINUS      &htnr EXCL N1    &htnr AT N2       &htnr HASH N3   &kp FSLH         &trans      &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&to 0        &trans         &trans           &trans            &trans                           &trans      &trans    &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        gaming_base_layer {
            bindings = <
&trans  &trans  &trans  &trans    &trans     &trans                                                &trans  &trans  &trans     &trans    &trans    &trans
&trans  &trans  &trans  &trans    &trans     &trans  &kp N6                             &trans     &trans  &trans  &trans     &trans    &kp SEMI  &trans
&trans  &kp A   &kp S   &kp D     &kp F      &trans  &trans                             &trans     &trans  &kp J   &kp K      &kp L     &kp P     &kp SQT
&trans  &trans  &trans  &trans    &trans     &trans  &trans     &trans       &trans     &trans     &trans  &trans  &kp COMMA  &kp DOT   &kp UP    &kp ENTER
&to 0   &trans  &trans  &kp LALT  &kp LCTRL          &kp SPACE  &kp ENTER    &kp RCTRL  &kp RSHFT          &trans  &kp SLASH  &kp LEFT  &kp DOWN  &kp RIGHT
            >;

            label = "Game0";
        };

        gaming_entry_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans    &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;

            label = "Game1";
        };

        gaming_wasd_layer {
            bindings = <
&trans  &trans     &trans  &trans  &trans  &trans                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp TAB    &kp Q   &kp W   &kp E   &kp R   &trans                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LSHFT  &kp A   &kp S   &kp D   &kp F   &kp T                     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LALT   &kp Z   &kp X   &kp C   &kp V   &kp G   &kp B     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&to 0   &trans     &trans  &trans  &trans          &trans  &trans    &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;

            label = "WASD";
        };

        config_layer {
            bindings = <
&out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                                      &none   &none  &none       &none  &none      &none
&none         &none         &none           &none         &none         &none         &bt BT_CLR                              &none       &none   &none  &kp INSERT  &none  &none      &none
&none         &none         &kp SCROLLLOCK  &none         &none         &tog 5        &sys_reset                              &sys_reset  &tog 4  &none  &none       &none  &kp PSCRN  &none
&none         &none         &none           &kp CAPS      &none         &none         &none       &bootloader    &bootloader  &none       &none   &none  &none       &none  &none      &none
&to 0         &none         &none           &none         &none                       &none       &none          &none        &kp RALT            &none  &none       &none  &none      &none
            >;

            label = "Conf";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Game_Entry {
            if-layers = <4>;
            then-layer = <3>;
        };

        Game_WASD {
            if-layers = <5>;
            then-layer = <3>;
        };
    };
};
