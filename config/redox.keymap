/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        htnr: behavior_hold_tap_no_rep {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kpnr>, <&kp>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "home row mod left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <60 46 47 61 62 48 49 63 65 33 19 6 20 50 20 21 23 34 35 36 37 7 8 9 10 11 21 22 23 24 25 35 36 37 38 39 51 52 53 54 55 65 66 67 68 69 6 7 8 9 10 11 19 20 21 22 23 24 25 33 34 35 36 37 38 39 49 50 51 52 53 54 55 63 65 66 67 68 69 64>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "home row mod right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 18 26 27 28 29 30 31 32 40 41 42 43 44 45 46 47 56 57 58 59 60 61 62 49 48 63 64 65>;
        };

        lth: lth {
            compatible = "zmk,behavior-hold-tap";
            label = "Layer-tap hold-preferred";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
        };

        skqr: skqr {
            compatible = "zmk,behavior-sticky-key";
            label = "sticky key quick-release";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <500>;
            quick-release;
            ignore-modifiers;
        };

        htsk: htsk {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold-tap sticky key";
            bindings = <&kp>, <&skqr>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
        };

        smart_shift: smart_shift {
            compatible = "zmk,behavior-mod-morph";
            label = "Smart shift";
            bindings = <&htsk LSHFT LSHFT>, <&caps_word>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    macros {
        kpnr: macro_kpnr {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "kp no repeat";
        };

        clear_state: clear_state {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp F24>;
            label = "CLEAR_STATE";
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp ESC    &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                                                                   &kp N6  &kp N7       &kp N8        &kp N9       &kp N0        &kp MINUS
&kp TAB    &kp Q         &kp W         &kp E         &kp R         &kp T   &kp DELETE                                         &kp DEL       &kp Y   &kp U        &kp I         &kp O        &kp SEMI      &kp BSPC
&kp LCTRL  &hml LSHFT A  &hml LALT S   &hml LCTRL D  &hml LGUI F   &kp G   &kp BACKSPACE                                      &kp EQUAL     &kp H   &hmr RGUI J  &hmr RCTRL K  &hmr LALT L  &hmr RSHFT P  &kp SQT
&kp LSHFT  &kp Z         &kp X         &kp C         &kp V         &kp B   &lt 7 PG_UP    &kp PG_DN         &kp LEFT_BRACKET  &lt 7 RBKT    &kp N   &kp M        &kp COMMA     &kp DOT      &kp FSLH      &mt LSHFT RET
&kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &to 1         &lth 3 ENTER          &kp SPACE      &htnr END HOME    &kp BACKSPACE     &smart_shift          &lth 4 ESC   &kp LEFT      &kp DOWN     &kp UP        &kp RIGHT
            >;

            label = "Base";
        };

        numpad_layer {
            bindings = <
&to 0   &kp EQUAL  &kp LPAR  &kp CARET  &kp RIGHT_PARENTHESIS  &kp PERCENT                                        &kp F16  &kp F17  &kp F18  &kp F19  &kp F20  &trans
&trans  &kp PLUS   &kp N7    &kp N8     &kp N9                 &kp STAR         &trans                    &trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15  &trans
&trans  &kp N0     &kp N4    &kp N5     &kp N6                 &htnr COMMA DOT  &trans                    &trans  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &trans
&trans  &kp MINUS  &kp N1    &kp N2     &kp N3                 &kp FSLH         &trans  &trans    &trans  &trans  &kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &trans
&to 0   &trans     &trans    &trans     &trans                                  &trans  &trans    &trans  &trans           &trans   &trans   &trans   &trans   &trans
            >;

            label = "Num";
        };

        symbol_layer_shared {
            bindings = <
&trans     &kp F1         &kp F2    &kp F3     &kp F4      &kp F5                                                                &kp F6     &kp F7         &kp F8     &kp F9     &kp F10    &kp UNDER
&kp GRAVE  &kp EXCL       &kp AT    &kp POUND  &kp DOLLAR  &kp PERCENT  &kp F11                                 &kp F12          &kp CARET  &kp AMPERSAND  &kp STAR   &kp LPAR   &kp RPAR   &trans
&trans     &kp PIPE       &kp PLUS  &kp MINUS  &kp EQUAL   &kp TILDE    &trans                                  &trans           &kp LEFT   &kp DOWN       &kp UP     &kp RIGHT  &kp TAB    &kp DOUBLE_QUOTES
&trans     &kp BACKSLASH  &kp LT    &kp GT     &kp LPAR    &kp LBRC     &kp C_PREV  &kp C_NEXT    &kp C_VOL_DN  &kp C_VOLUME_UP  &kp RBRC   &kp RPAR       &kp LBKT   &kp RBKT   &kp QMARK  &trans
&trans     &trans         &trans    &trans     &trans                   &kp UNDER   &kp C_PP      &kp K_MUTE    &trans                      &trans         &kp PG_DN  &kp PG_UP  &kp INS    &kp PRINTSCREEN
            >;

            label = "Sym";
        };

        symbol_layer_left {
            bindings = <
&trans  &trans     &trans    &trans     &trans    &trans                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans    &trans     &trans    &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LSHFT  &kp LALT  &kp LCTRL  &kp LGUI  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans    &trans     &trans    &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans    &trans     &trans            &trans  &trans    &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;

            label = "SymL";
        };

        symbol_layer_right {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                    &trans  &trans    &trans     &trans    &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans    &trans     &trans    &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &kp RGUI  &kp RCTRL  &kp LALT  &kp RSHFT  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans    &trans     &trans    &trans     &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans    &trans  &trans          &trans    &trans     &trans    &trans     &trans
            >;

            label = "SymR";
        };

        left_gaming_layer {
            bindings = <
&trans  &trans     &trans  &trans  &trans     &trans                                       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp TAB    &kp Q   &kp W   &kp E      &kp R   &kp N6                       &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LSHFT  &kp A   &kp S   &kp D      &kp F   &kp T                        &trans  &trans  &kp J   &kp K   &kp L   &kp P   &trans
&trans  &kp LALT   &kp Z   &kp X   &kp C      &kp V   &kp G   &kp B        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&to 0   &trans     &trans  &trans  &kp ENTER          &trans  &kp LCTRL    &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;

            label = "GameL";
        };

        right_gaming_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                    &trans  &trans    &trans    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans    &kp UP    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans    &trans    &trans     &trans  &trans
&to 0   &trans  &trans  &trans  &trans          &trans  &trans    &trans  &trans          &trans    &trans    &trans     &trans  &trans
            >;

            label = "GameR";
        };

        config_layer {
            bindings = <
&out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                                      &none   &none  &none       &none  &none  &none
&none         &none         &none           &none         &none         &none         &bt BT_CLR                              &none       &none   &none  &kp INSERT  &none  &none  &none
&none         &none         &kp SCROLLLOCK  &none         &none         &tog 5        &sys_reset                              &sys_reset  &tog 6  &none  &none       &none  &none  &none
&none         &to 0         &none           &kp CAPS      &none         &none         &none       &bootloader    &bootloader  &none       &none   &none  &none       &none  &none  &none
&none         &none         &none           &none         &none                       &none       &none          &none        &kp RALT            &none  &none       &none  &none  &none
            >;

            label = "Conf";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        left_symbol_shared {
            if-layers = <3>;
            then-layer = <2>;
        };

        right_symbol_shared {
            if-layers = <4>;
            then-layer = <2>;
        };
    };
};
