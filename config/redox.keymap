/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&sl { release-after-ms = <500>; };

/ {
    behaviors {
        htnr: htnr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kpnr>, <&kp>;

            label = "hold tap no repeat";
        };

        hrml: hrml {
            compatible = "zmk,behavior-hold-tap";
            label = "home row mod left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <220>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        hrmr: hrmr {
            compatible = "zmk,behavior-hold-tap";
            label = "home row mod right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <220>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        skqr: skqr {
            compatible = "zmk,behavior-sticky-key";
            label = "sticky key quick-release";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <500>;
            quick-release;
            ignore-modifiers;
        };

        htsk: htsk {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold-tap sticky key";
            bindings = <&kp>, <&skqr>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
        };

        sshift_tap: sshift_tap {
            compatible = "zmk,behavior-mod-morph";
            label = "Smart shift tap";
            bindings = <&skqr LSHFT>, <&caps_word>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        smart_shift: smart_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "Smart shift";
            bindings = <&kp>, <&sshift_tap>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
        };

        ltqt: ltqt {
            compatible = "zmk,behavior-hold-tap";
            label = "Layer tap quick tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            quick-tap-ms = <250>;
            tapping-term-ms = <200>;
        };

        htsl: htsl {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold tap sticky layer";
            bindings = <&mo>, <&sl>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    macros {
        kpnr: macro_kpnr {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "kp no repeat";
        };

        clear_state: clear_state {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp F24>;
            label = "CLEAR_STATE";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_return {
            bindings = <&kp RET>;
            key-positions = <42 43>;
            layers = <0 1 4 5>;
        };

        combo_c_return {
            bindings = <&kp LC(RET)>;
            key-positions = <42 43 44>;
            layers = <0 1 4 5>;
        };

        combo_esc {
            bindings = <&kp ESC>;
            key-positions = <53 52>;
            layers = <0 1 4 5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp ESC    &kp N1         &kp N2        &kp N3         &kp N4        &kp N5                                                                           &kp N6  &kp N7        &kp N8             &kp N9           &kp N0                 &kp MINUS
&kp TAB    &kp Q          &kp W         &kp E          &kp R         &kp T   &kp DELETE                                         &kp MINUS             &kp Y   &kp U         &kp I              &kp O            &htnr EQUAL SEMICOLON  &kp BSPC
&kp LCTRL  &hrml LSHFT A  &hrml LALT S  &hrml LCTRL D  &hrml LGUI F  &kp G   &kp BACKSPACE                                      &kp EQUAL             &kp H   &hrmr RGUI J  &hrmr RCTRL K      &hrmr LALT L     &hrmr RSHFT P          &kp SQT
&kp LSHFT  &kp Z          &kp X         &kp C          &kp V         &kp B   &ltqt 0 PG_UP  &kp PG_DN         &kp LEFT_BRACKET  &ltqt 0 RBKT          &kp N   &kp M         &htnr UNDER COMMA  &htnr MINUS DOT  &htnr EXCL SLASH       &mt LSHFT RET
&kp LCTRL  &kp LEFT_GUI   &kp LEFT_ALT  &kp RALT       &htsl 2 2             &ltqt 5 SPACE  &htnr END HOME    &key_repeat       &smart_shift LSHFT 0          &htsl 4 4     &kp LEFT           &kp DOWN         &kp UP                 &kp RIGHT
            >;

            label = "Base";
        };

        left_symbol_base_layer {
            bindings = <
&trans  &kp F1         &kp F2           &kp F3            &kp F4          &kp F5                                                                 &kp F6       &kp F7         &kp F8      &kp F9    &kp F10            &kp UNDER
&trans  &kp PLUS       &htnr AMPS N7    &htnr ASTRK N8    &htnr LPAR N9   &kp EQUAL        &kp F11                                 &kp F12       &kp CARET    &kp AMPS       &kp LBRC    &kp RBRC  &kp COLON          &trans
&trans  &htnr RPAR N0  &htnr DOLLAR N4  &htnr PERCENT N5  &htnr CARET N6  &htnr COMMA DOT  &trans                                  &kp PLUS      &kp PERCENT  &kp STAR       &kp LPAR    &kp RPAR  &kp DOUBLE_QUOTES  &trans
&trans  &kp MINUS      &htnr EXCL N1    &htnr AT N2       &htnr HASH N3   &kp FSLH         &kp C_PREV  &kp C_NEXT    &kp C_VOL_DN  &kp C_VOL_UP  &kp POUND    &kp BACKSLASH  &kp LBKT    &kp RBKT  &kp QMARK          &trans
&to 0   &trans         &trans           &trans            &trans                           &trans      &kp C_PP      &kp K_MUTE    &trans                     &lt 3 SPACE    &kp INSERT  &kp RALT  &kp PSCRN          &trans
            >;

            label = "SymL0";
        };

        left_symbol_entry_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans    &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;

            label = "SymL1";
        };

        left_symbol_hold_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans    &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;

            label = "SymL2";
        };

        right_symbol_layer {
            bindings = <
&trans     &trans    &trans     &trans     &trans       &trans                                         &trans  &trans  &trans  &trans  &trans  &trans
&kp GRAVE  &kp EXCL  &kp AT     &kp POUND  &kp DOLLAR   &kp PERCENT  &trans                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans     &kp PLUS  &kp UNDER  &kp EQUAL  &kp MINUS    &kp COLON    &trans                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans     &kp PIPE  &kp LT     &kp GT     &kp PERCENT  &kp TILDE    &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&to 0      &trans    &trans     &trans     &trans                    &trans  &trans    &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;

            label = "SymR";
        };

        navigation_layer {
            bindings = <
&trans       &kp LG(NUMBER_1)  &kp LG(N2)  &kp LG(N3)   &kp LG(N4)  &kp LG(N5)                                    &kp LG(N6)  &kp LG(N7)       &kp LG(N8)     &kp LG(N9)   &kp LG(N0)  &trans
&kp LS(TAB)  &kp TILDE         &kp SPACE   &kp PERCENT  &kp LC(R)   &kp LC(T)   &trans                    &trans  &kp LC(Y)   &kp LC(Z)        &kp LBRC       &kp RBRC     &kp DEL     &trans
&trans       &kp LSHFT         &kp LALT    &kp LCTRL    &kp LGUI    &kp LC(G)   &trans                    &trans  &kp LEFT    &kp DOWN         &kp UP         &kp RIGHT    &kp TAB     &kp RET
&trans       &kp LC(Z)         &kp LC(X)   &kp LC(C)    &kp LC(V)   &kp LC(B)   &trans  &trans    &trans  &trans  &kp HOME    &kp LC(LS(TAB))  &kp LC(TAB)    &kp END      &kp SPACE   &trans
&to 0        &trans            &trans      &trans       &trans                  &trans  &trans    &trans  &trans              &kp RET          &kp PAGE_DOWN  &kp PAGE_UP  &trans      &trans
            >;

            label = "Nav";
        };

        gaming_base_layer {
            bindings = <
&trans  &trans  &trans  &trans    &trans     &trans                                             &trans  &trans  &trans     &trans    &trans    &trans
&trans  &trans  &trans  &trans    &trans     &trans  &trans                          &trans     &trans  &trans  &trans     &trans    &kp SEMI  &trans
&trans  &kp A   &kp S   &kp D     &kp F      &trans  &trans                          &trans     &trans  &kp J   &kp K      &kp L     &kp P     &trans
&trans  &trans  &trans  &trans    &trans     &trans  &trans     &trans       &trans  &trans     &trans  &trans  &kp COMMA  &kp DOT   &kp UP    &kp ENTER
&to 0   &trans  &trans  &kp LALT  &kp LCTRL          &kp SPACE  &kp ENTER    &trans  &kp LSHFT          &trans  &kp SLASH  &kp LEFT  &kp DOWN  &kp RIGHT
            >;

            label = "Game0";
        };

        gaming_entry_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans    &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;

            label = "Game1";
        };

        gaming_wasd_layer {
            bindings = <
&trans  &trans     &trans  &trans  &trans  &trans                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp TAB    &kp Q   &kp W   &kp E   &kp R   &kp N6                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LSHFT  &kp A   &kp S   &kp D   &kp F   &kp T                     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LALT   &kp Z   &kp X   &kp C   &kp V   &kp G   &kp B     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&to 0   &trans     &trans  &trans  &trans          &trans  &trans    &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;

            label = "WASD";
        };

        config_layer {
            bindings = <
&out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                                      &none   &none  &none       &none  &none      &none
&none         &none         &none           &none         &none         &none         &bt BT_CLR                              &none       &none   &none  &kp INSERT  &none  &none      &none
&none         &none         &kp SCROLLLOCK  &none         &none         &tog 9        &sys_reset                              &sys_reset  &tog 6  &none  &none       &none  &kp PSCRN  &none
&none         &none         &none           &kp CAPS      &none         &none         &none       &bootloader    &bootloader  &none       &none   &none  &none       &none  &none      &none
&to 0         &none         &none           &none         &none                       &none       &none          &none        &kp RALT            &none  &none       &none  &none      &none
            >;

            label = "Conf";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        SymL_entry {
            if-layers = <2>;
            then-layer = <1>;
        };

        SymL_hold {
            if-layers = <3>;
            then-layer = <1>;
        };

        SymL_SymR {
            if-layers = <4>;
            then-layer = <1>;
        };

        Game_Entry {
            if-layers = <7>;
            then-layer = <6>;
        };

        Game_WASD {
            if-layers = <8>;
            then-layer = <6>;
        };
    };
};
